# -*- coding: utf-8 -*-
"""SourceCodeTubesSA-Rezi

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uIBw-fxl64bbWf_b30UdjALCTiilLD5R

# **Sequential Search** (Unordered list)
"""

def SeqSearch(data,key):
  found=[]
  for i in range(len(data)): #Looping
    if data[i] == key:
      found.append(i)
  if found != []:
    return f"angka {key} ketemu pada index : {found}"
  else:
    return f"angka {key} Tidak ada diindex manapun gan"

n = [49, 487, 98, 230, 427, 211, 290, 190, 195, 478, #600 angka random pada array,yang diambil menggunakan library random
     22, 369, 527, 258, 467, 244, 329, 578, 377, 310,
     552, 118, 288, 111, 17, 171, 129, 475, 181, 515,
     364, 279, 81, 94, 22, 73, 509, 158, 528, 239, 565,
     194, 314, 162, 207, 167, 592, 589, 480, 176, 17, 80,
     122, 178, 173, 477, 412, 106, 102, 513, 12, 472, 284,
     208, 80, 435, 402, 476, 549, 2, 59, 514, 560, 175, 259
     , 424, 407, 75, 152, 565, 561, 370, 96, 483, 480, 44, 256,
     80, 575, 71, 441, 106, 410, 442, 596, 470, 244, 586, 581,
     12, 94, 404, 338, 338, 102, 495, 554, 283, 404, 26, 29, 263,
     196, 353, 120, 511, 202, 306, 185, 281, 292, 30, 322, 463, 77,
     190, 327, 90, 504, 177, 140, 93, 534, 460, 250, 166, 291, 105,
     242, 556, 71, 516, 446, 89, 357, 27, 430, 1, 42, 87, 449, 245,
     450, 361, 7, 186, 150, 393, 167, 248, 266, 110, 598, 104, 225,
     444, 28, 384, 487, 534, 446, 189, 132, 280, 418, 472, 98, 104,
     185, 89, 160, 68, 199, 12, 572, 381, 312, 178, 470, 271, 1, 42,
     135, 220, 322, 517, 313, 417, 419, 575, 355, 485, 398, 432, 5,
     129, 516, 162, 217, 566, 106, 127, 410, 67, 239, 145, 166, 582,
     235, 529, 143, 156, 35, 128, 589, 512, 129, 394, 381, 144, 386,
     190, 591, 43, 1, 20, 84, 87, 22, 164, 61, 544, 174, 98, 128, 298,
     503, 406, 401, 126, 248, 10, 510, 519, 556, 420, 495, 245, 161, 324,
     369, 199, 248, 95, 316, 280, 368, 195, 430, 172, 92, 307, 548, 398,
     382, 89, 521, 415, 170, 477, 67, 130, 127, 267, 595, 21, 230, 223,
     451, 130, 8, 411, 187, 15, 543, 371, 549, 224, 233, 518, 186, 518, 
     99, 267, 292, 425, 451, 107, 3, 415, 64, 169, 121, 571, 443, 184, 
     350, 276, 10, 411, 599, 498, 369, 223, 482, 536, 261, 287, 203,
     499, 98, 129, 437, 491, 49, 117, 428, 114, 390, 41, 164, 49, 488,
     90, 545, 145, 106, 170, 403, 454, 391, 571, 320, 443, 497, 125, 380,
     15, 212, 85, 240, 572, 469, 60, 515, 189, 207, 483, 132, 184, 126, 
     354, 429, 17, 591, 75, 47, 558, 188, 312, 376, 196, 281, 258, 127,
     572, 59, 273, 351, 16, 209, 520, 361, 63, 391, 496, 21, 446, 530, 
     276, 201, 460, 582, 206, 566, 156, 539, 415, 396, 24, 77, 358, 468,
     487, 194, 221, 444, 538, 314, 422, 586, 137, 65, 189, 351, 301, 554, 
     241, 140, 386, 103, 377, 368, 13, 336, 114, 44, 499, 33, 400, 115, 
     449, 471, 178, 301, 131, 196, 288, 543, 233, 413, 232, 253, 230, 0, 
     257, 7, 588, 329, 450, 250, 277, 243, 531, 459, 137, 76, 144, 288,
     36, 528, 545, 484, 205, 92, 248, 355, 401, 5, 28, 146, 282, 597,
     526, 530, 77, 7, 201, 329, 37, 248, 235, 454, 236, 99, 349, 576, 514, 11, 71]

"""Cari angka **8**"""

print(SeqSearch(n,8))

"""Cari data yang tidak ada yaitu angka **74**"""

print(SeqSearch(n,74))

"""# **Sequential Search** (ordered list)"""

n = [49, 487, 98, 230, 427, 211, 290, 190, 195, 478, #600 angka random pada array,yang diambil menggunakan library random
     22, 369, 527, 258, 467, 244, 329, 578, 377, 310,
     552, 118, 288, 111, 17, 171, 129, 475, 181, 515,
     364, 279, 81, 94, 22, 73, 509, 158, 528, 239, 565,
     194, 314, 162, 207, 167, 592, 589, 480, 176, 17, 80,
     122, 178, 173, 477, 412, 106, 102, 513, 12, 472, 284,
     208, 80, 435, 402, 476, 549, 2, 59, 514, 560, 175, 259
     , 424, 407, 75, 152, 565, 561, 370, 96, 483, 480, 44, 256,
     80, 575, 71, 441, 106, 410, 442, 596, 470, 244, 586, 581,
     12, 94, 404, 338, 338, 102, 495, 554, 283, 404, 26, 29, 263,
     196, 353, 120, 511, 202, 306, 185, 281, 292, 30, 322, 463, 77,
     190, 327, 90, 504, 177, 140, 93, 534, 460, 250, 166, 291, 105,
     242, 556, 71, 516, 446, 89, 357, 27, 430, 1, 42, 87, 449, 245,
     450, 361, 7, 186, 150, 393, 167, 248, 266, 110, 598, 104, 225,
     444, 28, 384, 487, 534, 446, 189, 132, 280, 418, 472, 98, 104,
     185, 89, 160, 68, 199, 12, 572, 381, 312, 178, 470, 271, 1, 42,
     135, 220, 322, 517, 313, 417, 419, 575, 355, 485, 398, 432, 5,
     129, 516, 162, 217, 566, 106, 127, 410, 67, 239, 145, 166, 582,
     235, 529, 143, 156, 35, 128, 589, 512, 129, 394, 381, 144, 386,
     190, 591, 43, 1, 20, 84, 87, 22, 164, 61, 544, 174, 98, 128, 298,
     503, 406, 401, 126, 248, 10, 510, 519, 556, 420, 495, 245, 161, 324,
     369, 199, 248, 95, 316, 280, 368, 195, 430, 172, 92, 307, 548, 398,
     382, 89, 521, 415, 170, 477, 67, 130, 127, 267, 595, 21, 230, 223,
     451, 130, 8, 411, 187, 15, 543, 371, 549, 224, 233, 518, 186, 518, 
     99, 267, 292, 425, 451, 107, 3, 415, 64, 169, 121, 571, 443, 184, 
     350, 276, 10, 411, 599, 498, 369, 223, 482, 536, 261, 287, 203,
     499, 98, 129, 437, 491, 49, 117, 428, 114, 390, 41, 164, 49, 488,
     90, 545, 145, 106, 170, 403, 454, 391, 571, 320, 443, 497, 125, 380,
     15, 212, 85, 240, 572, 469, 60, 515, 189, 207, 483, 132, 184, 126, 
     354, 429, 17, 591, 75, 47, 558, 188, 312, 376, 196, 281, 258, 127,
     572, 59, 273, 351, 16, 209, 520, 361, 63, 391, 496, 21, 446, 530, 
     276, 201, 460, 582, 206, 566, 156, 539, 415, 396, 24, 77, 358, 468,
     487, 194, 221, 444, 538, 314, 422, 586, 137, 65, 189, 351, 301, 554, 
     241, 140, 386, 103, 377, 368, 13, 336, 114, 44, 499, 33, 400, 115, 
     449, 471, 178, 301, 131, 196, 288, 543, 233, 413, 232, 253, 230, 0, 
     257, 7, 588, 329, 450, 250, 277, 243, 531, 459, 137, 76, 144, 288,
     36, 528, 545, 484, 205, 92, 248, 355, 401, 5, 28, 146, 282, 597,
     526, 530, 77, 7, 201, 329, 37, 248, 235, 454, 236, 99, 349, 576, 514, 11, 71]

# Insertion sort in Python


def insertionSort(array):

    for step in range(1, len(array)):
        key = array[step]
        j = step - 1
        
        # Bandingkan kunci dengan setiap elemen di sebelah kirinya hingga ditemukan elemen yang lebih kecil darinya
         # Untuk urutan menurun, ubah key<array[j] menjadi key>array[j].      
        while j >= 0 and key < array[j]:
            array[j + 1] = array[j]
            j = j - 1
        
        # Place key at after the element just smaller than it.
        array[j + 1] = key

insertionSort(n)

print(n)

def OrderedSeqSearch(data,key):
  i=0
  stop=False
  found=[]
  while not stop and i<len(data):
    if data[i] == key:
      found.append(i)
    elif data[i] > key:
      stop = True
    i += 1
  if found!=[]:
    return f"angka {key} terdapat pada index : {found}"
  else:
    return f"angka {key} tidak ditemukan"

"""Cari angka **8**"""

print(OrderedSeqSearch(n,8))

"""Cari angka yang tidak terdapat pada array yaitu **74**"""

print(OrderedSeqSearch(n,74))

"""# **BinarySearch**"""